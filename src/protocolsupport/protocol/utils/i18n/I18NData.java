package protocolsupport.protocol.utils.i18n;

import java.io.BufferedReader;
import java.text.MessageFormat;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.stream.Collectors;

import com.google.gson.JsonObject;

import protocolsupport.utils.Utils;

public class I18NData {

	public static final String DEFAULT_LOCALE = "en_us";

	protected static final HashMap<String, I18N> i18ns = new HashMap<>();

	static {
		//the languages file is generated by the gradle build script
		Utils.getResource("i18n/languages").lines().forEach(locale -> loadAndRegisterI18N(locale, Utils.getResource("i18n/" + locale + ".json")));
	}

	public static void loadAndRegisterI18N(String locale, BufferedReader stream) {
		i18ns.put(locale, new I18N(
			locale,
			Utils.GSON.fromJson(stream, JsonObject.class).entrySet().stream()
			.collect(Collectors.toMap(Entry::getKey, entry -> entry.getValue().getAsString()))
		));
	}

	private static I18N getDefaultI18N() {
		return i18ns.get(DEFAULT_LOCALE);
	}

	public static I18N getI18N(String locale) {
		return i18ns.getOrDefault(locale, getDefaultI18N());
	}

	public static String getTranslationString(String locale, String key) {
		String tlstring = getI18N(locale).getTranslationString(key);
		if (tlstring != null) {
			return tlstring;
		}
		String deftlstring = getDefaultI18N().getTranslationString(key);
		if (deftlstring != null) {
			return deftlstring;
		}
		return MessageFormat.format("Unknown translation key: {0}", key);
	}

	public static String translate(String locale, String key, String... args) {
		return String.format(getTranslationString(locale, key), (Object[]) args);
	}

}
